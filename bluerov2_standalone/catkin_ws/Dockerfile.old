#THIS LATEST ROS DOCKER IMAGE HAS AN ABI ROSTIME BREAKAGE
#AS OF 12/21/2018 SO APT INSTALL PACKAGES INSTEAD
#FROM osrf/ros:melodic-desktop-full

#this version has ros installed via apt
#FROM build_tf_ros:built
#FROM tf2cpu_ros
FROM tf2-cpu

# ROS Melodic
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
RUN apt install curl -y
RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
RUN apt update

RUN apt install -y \
    ros-melodic-ros-base

RUN apt install -y \
    ros-melodic-gazebo* 

RUN apt install -y \
    ros-melodic-rqt*
RUN apt update

# # Python 3.8
# RUN apt install autoconf -y
# RUN apt-get install build-essential checkinstall -y
# RUN apt-get install libreadline-gplv2-dev libncursesw5-dev libssl-dev \
#     libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev zlib1g-dev -y

# RUN cd /opt
# RUN wget https://www.python.org/ftp/python/3.8.12/Python-3.8.12.tgz
# RUN tar xzf Python-3.8.12.tgz


# RUN cd Python-3.8.12 \
#     && autoconf \
#     && ./configure --enable-optimizations \
#     && make \
#     && make install
# # RUN cd Python-3.8.12
# # RUN ./configure --enable-optimizations
# # RUN make install
# RUN cd /opt
# RUN rm -f Python-3.8.12.tgz
# RUN update-alternatives --install /usr/bin/python python /usr/local/bin/python3.8 10
# RUN export PYTHONPATH=/usr/local/lib/python3.8/dist-packages
# RUN pip3 install --upgrade pip setuptools
# RUN pip3 install catkin-pkg
# RUN apt-get install -y \
#     python3.8-dev \
#     python3-catkin-pkg \
#     python3-rosdep

RUN apt-get install -y \
    python3-dev \
    python3-catkin-pkg \
    python3-rosdep



RUN apt install -y \     
    ros-melodic-uuv-simulator \
    python3-catkin-tools

RUN pip3 install -U rospkg
RUN pip3 install defusedxml

# RUN apt install -y wget
# RUN sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list'
# RUN wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add -
# #RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5
# RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -
# RUN apt update


RUN apt update && apt install -y          \
    # python-catkin-tools                   \
    # ros-melodic-control-toolbox           \
    protobuf-compiler protobuf-c-compiler \
    xvfb                                  \
    # ros-melodic-message-to-tf             \
    wget

RUN pip3 install pymap3d casadi

# RUN apt remove -y       \
#     ros-melodic-gazebo* \
#     libgazebo*          \
#     gazebo*

#RUN apt install -y gazebo9 \
#    libgazebo9-dev
# RUN apt install -y ros-melodic-gazebo9-*

# install this after upgrading gazebo or some include files will be overwritten
# by the upgrade
# RUN apt install -y \
#     libignition-math2-dev


RUN pip3 install --upgrade pip
RUN pip3 install          \
    Cython
    
          
RUN pip3 install decorator==4.4.2     
RUN pip3 install numpy       
RUN pip3 install networkx==2.2        
RUN pip3 install matplotlib==3.5.3     
RUN pip3 install six==1.12.0          
RUN pip3 install cloudpickle==1.2.1   

RUN apt install libjpeg-dev zlib1g-dev -y
RUN pip3 install pillow         
RUN pip3 install scipy==1.2.0
RUN pip3 install scikit-image  
RUN pip3 install tornado==3.2.1       
RUN pip3 install visdom               
    # torch==0.4.1         
    # torchvision==0.2.0   
# RUN pip install qdm          ???
# RUN pip install pydensecrf            ???
RUN pip3 install protobuf             
RUN pip3 install tensorboardX         
RUN pip3 install imutils              
RUN pip3 install argparse             
RUN pip3 install psutil               
RUN pip3 install noise

RUN apt install -q -y   \
    python-yaml         \
    python-tk           \
    nano                \
    htop                \
    cron                \
    socat

RUN mkdir /iai_aa_side_scan_sonar

RUN pip3 install torch  torchvision 
RUN pip3 install -U scikit-learn
RUN pip3 install keras==2.2.4
RUN pip3 install seaborn
# RUN pip3 install python-dateutil==2.5.0




#RUN apt-get install --reinstall ca-certificates
#RUN update-ca-certificates
RUN curl -s  https://winswitch.org/gpg.asc  | gpg -
ENV DEBIAN_FRONTEND=noninteractive
RUN DEBIAN_FRONTEND=noninteractive && \
    apt-get update && \
    apt-get install -y apt-transport-https && \
    apt-get install -y xpra
RUN pip3 install -U open3d-python

RUN pip3 install netifaces
RUN pip3 install opencv-python

# RUN apt install -q -y   \
#     ros-melodic-rviz-visual-tools \
#     ros-melodic-moveit-visual-tools \
#     ros-melodic-moveit-ros-visualization

RUN apt install -q -y   \
    ros-melodic-py-trees* \
    ros-melodic-rqt-py-trees 

RUN pip3 install pydot
RUN pip3 install graphviz

RUN rosdep init
RUN rosdep update
RUN pip3 install empy
RUN pip3 install wstool
RUN pip3 install navpy
# For Py2.7
RUN wget https://bootstrap.pypa.io/pip/2.7/get-pip.py
RUN sudo python2.7 get-pip.py
RUN pip2.7 install pymap3d
RUN pip3 install python-dateutil==2.7.0
RUN pip3 install pyyaml==5.4.1
RUN pip3 install gnupg
RUN pip install gnupg
RUN pip install scipy

# RUN mkdir tf2_ros/
# RUN cd tf2_ros/
# RUN mkdir src/
# RUN wstool init
# # RUN echo $PWD
# RUN wstool set -y src/geometry2 --git https://github.com/ros/geometry2 -v 0.6.5
# RUN wstool update src/geometry2
# RUN wstool up
# RUN source /opt/ros/melodic/setup.bash
# RUN rosdep install --from-paths src --ignore-src -y -r
# RUN catkin_make --cmake-args \
#             -DCMAKE_BUILD_TYPE=Release \
#             -DPYTHON_EXECUTABLE=/usr/local/bin/python3.8 \
#             -DPYTHON_INCLUDE_DIR=/usr/include/python3.8 \
#             -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.8.so


# mkdir tf2_ros/
# cd tf2_ros/
# mkdir src/
# wstool init
# wstool set -y src/geometry2 --git https://github.com/ros/geometry2 -v 0.6.5
# wstool update src/geometry2
# wstool up
# source /opt/ros/melodic/setup.bash
# rosdep install --from-paths src --ignore-src -y -r
# catkin_make --cmake-args \
#         -DCMAKE_BUILD_TYPE=Release \
#         -DPYTHON_EXECUTABLE=/usr/bin/python3.7 \
#         -DPYTHON_INCLUDE_DIR=/usr/include/python3.7 \
#         -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.7.so


RUN wget https://bootstrap.pypa.io/pip/2.7/get-pip.py
RUN sudo python2.7 get-pip.py


RUN sed -i 's/env python2/env python/g' /opt/ros/melodic/lib/uuv_descriptions/spawn_model
RUN sed -i 's/env python2/env python/g' /opt/ros/melodic/lib/uuv_thruster_manager/thruster_allocator.py
RUN sed -i 's/env python2/env python/g' /opt/ros/melodic/lib/uuv_trajectory_control/rov_pid_controller.py
RUN sed -i 's/from thruster import Thruster/from .thruster import Thruster/g' /opt/ros/melodic/lib/python2.7/dist-packages/uuv_thrusters/models/thruster_proportional.py
RUN sed -i 's/import cPickle/import _pickle as cPickle/g' /opt/ros/melodic/lib/python2.7/dist-packages/py_trees_ros/blackboard.py
RUN sed -i 's/print "%s" % sub_blackboard.data/print("%s" % sub_blackboard.data)/g' /opt/ros/melodic/lib/python2.7/dist-packages/py_trees_ros/programs/blackboard_watcher.py
RUN sed -i 's/print "%s" % s/print("%s" % s)/g' /opt/ros/melodic/lib/python2.7/dist-packages/py_trees_ros/programs/blackboard_watcher.py
RUN sed -i 's/Exception, e:/Exception(e):/g' /opt/ros/melodic/lib/python2.7/dist-packages/py_trees_ros/programs/blackboard_watcher.py
RUN sed -i 's/print "%s" % s/print("%s" % s)/g' /opt/ros/melodic/lib/python2.7/dist-packages/py_trees_ros/programs/tree_watcher.py
RUN sed -i 's/print "%s" % msg.data/print("%s" % msg.data)/g' /opt/ros/melodic/lib/python2.7/dist-packages/py_trees_ros/programs/tree_watcher.py
RUN sed -i 's/basestring/str/g' /opt/ros/melodic/lib/python2.7/dist-packages/py_trees_ros/subscribers.py
RUN sed -i 's/iteritems/items/g' /opt/ros/melodic/lib/python2.7/dist-packages/py_trees_ros/subscribers.py
RUN cd ..

# RUN rm -R tf2_ros