<!--
File:         start_bluerov_standalone.launch
Description:  Includes Bluerov UUV and SIM top level launch file
-->

<launch>
    <!-- ############################### -->
    <!--            UUV ARGS             -->
    <!-- ############################### -->

    <arg name="uuv_name" default="uuv0"/>
    <arg name="standard_output" default="screen"/>

    <!-- CUDA acceleration for AM/pytorch -->
    <!-- Only in GPU docker -->
    <!-- Tensorflow executionis determined by docker (TF2 CPU or TF2 GPU installed) -->
    <arg name="use_cuda" default="true"/>
    <env unless="$(arg use_cuda)" name="CUDA_VISIBLE_DEVICES" value="" />

    <!--rtreach parameters-->
    <arg name="use_rtreach" default="true"/>
    <arg name="box_sim_time" default="2"/>
    <arg name="uuv_sim_time" default = "45"/>
    <arg name="box_wall_time" default="1"/>
    <arg name="uuv_wall_time" default="10"/>
    <arg name="box_display_max" default="5"/>
    <arg name="rtreach_output" default="log"/> <!-- log or screen -->
    <arg name="rtreach_debug" default="false"/>
    <!--rtreach disturbance parameters-->
    <arg name="xd_l" default="0.0" />
    <arg name="xd_u" default="0.0" />
    <arg name="yd_l" default="0.0" />
    <arg name="yd_u" default="0.0" />
    <arg name="vd_l" default="0.0" />
    <arg name="vd_u" default="0.0" />
    <arg name="thd_l" default="0.0" />
    <arg name="thd_u" default="0.0" />
    <arg name="parameter_uncertainty" default="0.0" />
    <arg name="x_unc" default="0.0" />
    <arg name="y_unc" default="0.0" />
    <arg name="speed_unc" default="0.0" />
    <arg name="theta_unc" default="0.0" />

    <!-- Rosbag -->
    <arg name="record" default="false"/> 
    <arg name="results_directory" default="$(find vandy_bluerov)/results"/>
    <arg name="bag_filename" default="$(find vandy_bluerov)/results"/>
    <arg name="small_bagfile" default="true"/>

    <!-- Often modified params: -->

    <!-- No go zones -->
    <arg name="no_go_zone_list" default="''"/>

    <!-- Anomaly Detector for Fishing Nets -->
    <arg name="enable_anomaly_detector" default="false"/>

    <!-- Behaviour Tree CM -->
    <arg name="enable_emergency_stop" default="true"/> 


    <!-- FDR Log -->
    <arg name="fdr_log_filename" default="fdr_rx_map.csv"/>
    <arg name="generate_fdr" default="true"/>
    
    <!-- Runtime evaluation -->
    <arg name="bluerov_eval" default="true"/>

    <!-- Obstacle avoidance -->
    <arg name="use_obstacle_avoidance" default="true" />

    <!-- FLS LEC3 with pencilbeam sonar OR BlueROV Ping Sonar -->
    <arg name="obstacle_avoidance_source" default="fls_lec3lite"/>

    <!-- Side Scan Sonar noise -->
	<arg name="sss_sonar_noise" default="0.5"/>
	<!-- Forward Imaging Sonar noise -->
	<arg name="fis_sonar_noise" default="25"/>

    <!-- Waypoints: -->
    <arg name="random_waypoints" default="false"/>
    <!-- <arg name="waypoint_filename" default="search_pattern.yaml"/> -->
    <arg name="waypoint_filename" default="training_pattern.yaml"/>
    <arg name="num_waypoints" default="5"/>
    <arg name="min_distance" default="15"/>
    <arg name="max_distance" default="30"/>
    <arg name="min_heading" default="-1.5708"/>
    <arg name="max_heading" default="1.5708"/>
    <arg name="x_track_error" default="false"/>

    <!-- AIS -->
    <!-- VU: -->
    <arg name="generate_ais_data" default="false"/>
    <arg name="predict_ais_data"  default="false"/>
    <arg name="dynamic_obstacles_count" default="8"/>
 
    <!-- CM params -->
    <arg name="travel_cost" default="0.0013"/>
    <arg name="failsafe_battery_low_threshold" default="0.10"/>
    <arg name="failsafe_rth_enable" default="true"/>
    <arg name="failsafe_signal_lost_threshold" default="120"/>
    <arg name="failsafe_tracking_lost_threshold" default="30"/>
    <arg name="geofence_threshold" default="500"/>
    <arg name="home_radius" default="15"/>
    <arg name="pipe_estimation_good_log_val" default="7.5"/>
    <arg name="speed_good_log_val" default="10"/>
    <arg name="uuv_max_speed" default="0.9"/>
    <arg name="uuv_min_speed" default="0.4"/>
    <arg name="batt_charge" default="0.99"/>
    <arg name="enable_rpm_sensor_check" default="false"/>
    <arg name="enable_training_data_collection" default="false"/> 

    <!-- Degradation Detector LEC enable -->
    <arg name="enable_fault_detection" default="false"/>
    <arg name="decision_source" default="combination_am"/> 
    <arg name="fls_in_view_window" default="20"/> 
    <arg name="fls_in_view_limit" default="100"/> 
    <arg name="classification_threshold" default="0.99"/> 
    <arg name="sum_thrust_loss_threshold" default="1.00"/> 
    <arg name="total_degradation_threshold" default="0.0"/>
    
    <arg name="mission_file" default="mission_04.yaml"/>
    <arg name="fdir_path" default="jupyter/admin_BlueROV/FDIR/selclass"/> 
    <arg name="fdir_params" default="{'user_choice':'override_threshold','am_s_threshold':0.5, 'am_threshold':0.5}"/> 

    <!-- Note: Possible control reallocation with TAM -->
    <arg name="tam_file" default="$(find vandy_bluerov)/config/TAM.yaml"/>

    <!-- BlueROV2 PID controller launch params-->
    <arg name="teleop" default="false"/>
    <arg name="mode" default="noisy"/>  <!--noisy/default-->
    <arg name="joy_id" default="0"/>
    
    <!-- Init params from world model -->
    <arg name="vehicle_latitude" default="38.971203"/>
    <arg name="vehicle_longitude" default="-76.398464"/>
    <arg name="vehicle_altitude" default="45"/>

    <arg name="vehicle_roll" default="0"/>
    <arg name="vehicle_pitch" default="0"/>
    <arg name="vehicle_yaw" default="1.5708"/>

    <!-- Vehicle's Initial HSD Command -->
    <arg name="init_heading" default="$(arg vehicle_yaw)"/>
    <arg name="init_speed" default="$(arg uuv_max_speed)"/>
    <arg name="init_depth" default="$(arg vehicle_altitude)"/> 

    <!-- For testing PID Controller -->
    <arg name="heading" default="0"/>
    <arg name="speed" default="$(arg uuv_max_speed)"/>
    <arg name="depth" default="45"/>
    <arg name="enable_send_hsd_single" default="true"/>
    <arg name="hsd_debug_mode" default="false"/>

    <!-- LEC2 params -->
    <arg name="lec2_vae_path" default="/jupyter/admin_BlueROV/LEC2Lite_AM/vae"/>
	<arg name="lec2_svdd_path" default="/jupyter/admin_BlueROV/LEC2Lite_AM/svdd/SLModel"/>
    <arg name="lec2_filename" default="lec2_quant_up_hwsim_100_8.tflite"/>

    <!-- LEC3 params -->
    <arg name="max_range" default="50.0" />
    <arg name="num_range_bins" default="252" />
    <arg name="lec3_vae_path" default="/jupyter/admin_BlueROV/LEC3Lite_AM/vae"/>
    <arg name="lec3_filename" default="best_model/lec3_quant.tflite"/>


    <!-- ############################### -->
    <!--           SIM ARGS              -->
    <!-- ############################### -->

    <!-- Fishing net generation -->
    <arg name="enable_fishnet" default="false"/>

    <!-- Pipeline generator -->
    <!-- Pipe Starting Position Relative to Vehicle -->
    <arg name="pipe_posx" default="10"/> <!--30-->
    <arg name="pipe_posy" default="2"/> <!--2--><!-- puts vehicle at start of pipe -->
    <!-- Random Seed for ROS Nodes and Gazebo Plugins -->
    <arg name="num_segments" default="5"/>
    <arg name="length_min" default="50.0"/>
    <arg name="length_max" default="100.0"/>
    <arg name="angle_min" default="-0.7854"/>
    <arg name="angle_max" default="0.7854"/>
    <arg name="bury_len_min" default="0.3048"/> 
    <arg name="bury_len_max" default="6.096"/> 
    <arg name="pipe_scale" default="3"/>

    <!-- Thruster motor failure for thrust loss and amper drop in thruster power -->
    <arg name="thruster_motor_failure" default="false"/>
    <arg name="thruster_id" default="0"/>  <!-- 0..5 -->
    <arg name="thruster_thrust_force_efficiency" default="0.81"/> <!-- 0.0 to 1.0 -->
    <arg name="thruster_motor_fail_duration" default="65535"/>
    <arg name="thruster_motor_fail_starting_time" default="50"/>
    <!-- Secondaty thruster failure -->
    <arg name="dual_thruster_failure" default="false"/>
    <arg name="second_thruster_id" default="0"/>  <!-- 0..5 -->
    <arg name="second_thruster_thrust_force_efficiency" default="0.31"/> <!-- 0.0 to 1.0 -->
    <arg name="second_thruster_motor_fail_duration" default="65535"/>
    <arg name="second_thruster_motor_fail_starting_time" default="100"/>

    <arg name="enable_fault_detection_tester" default="false"/>

    <!-- RPM sensor failure -->
    <arg name="failed_rpm_sensor" default="2"/>
    <arg name="failed_rpm_sensor_enable" default="False"/>
    <arg name="failed_rpm_sensor_start" default="50"/>
    
    <!--Argument for number of obstacles-->
    <!-- <arg name="num_obstacles" default="100"/>
    <arg name="obs_distance" default="60"/> -->

    <!-- static and dynamic obstacles-->
    <arg name="enable_obstacles" default="false" />
    <arg name="enable_debris" default="false" />
    <arg name="enable_dynamic_obstacles" default="false" />
    <arg name="lambda_low" default="30" />
    <arg name="lambda_high" default="60" />
    <arg name="lambda_low_static" default="30" />
    <arg name="lambda_high_static" default="60" />
    <arg name="avg_uuv_speed" default="0.9" />
    <arg name="box_distance_variance" default="0" />
    <arg name="box_distance_static" default="65" />
    <arg name="box_distance_x" default="40" />
    <arg name="box_distance_y" default="25" />
    <arg name="box_velocity_x" default="0.0" />
    <arg name="box_velocity_y" default="-2.5" />
    <arg name="box_max_cnt" default="10" />
    <arg name="box_size_x" default="10" />
    <arg name="box_size_y" default="10" />
    <arg name="box_size_z" default="10" />
    <arg name="enable_wall" default="False" />
    <arg name="enable_random" default="False" />
    <arg name="obstacle_filename_static" default="''" />
    <arg name="obstacle_filename_dynamic" default="''" />
    <arg name="random_box_density" default="1" />

    <!-- Less often modified params: -->    

    <!--Thruster blade failure for IMU noise-->
    <arg name="thruster_blade_failure" default="false"/> <!--true of false for the entire simulation-->

    <!-- Use NED -->
    <arg name="use_ned" default="true"/>

    <!-- Random Seed for ROS Nodes and Gazebo Plugins -->
    <arg name="random_seed" default="0"/>

    <!-- Gazebo World Parameters-->
    <arg name="ocean_depth" default="60"/>
    <arg name="paused" default="true"/>
    <!-- <arg name="headless" default="true"/> -->
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="false"/>
    <arg name="timeout" default="600"/>
    <arg name="unpause_timeout" default="15"/>
    <arg name="gz_debug" default="false"/>

    <!-- World Origin in lat long -->
    <arg name="origin_latitude" default="38.971203"/> <!-- 38.971203 -->
    <arg name="origin_longitude" default="-76.398464"/> <!-- -76.398464 -->
    <arg name="origin_altitude" default="0"/>
 
    <arg name="upenn_sysid" default="false"/>
    <arg name="rviz" default="$(arg gui)"/>

    <!-- ############################### -->
    <!--          INCLUDES               -->
    <!-- ############################### -->


    <include file="$(find vandy_bluerov)/launch/start_bluerov_sim.launch">
        <arg name="uuv_name" value="$(arg uuv_name)"/>

        <!--Output parameters-->
        <arg name="standard_output" value="$(arg standard_output)"/>

        <!-- Logging -->
        <arg name="results_directory" value="$(arg results_directory)"/>

        <!-- Fishing net generation -->
        <arg name="enable_fishnet" value="$(arg enable_fishnet)"/>

        <!-- FDR -->
        <arg name="generate_fdr" value="$(arg generate_fdr)"/>

        <arg name="uuv_max_speed" value="$(arg uuv_max_speed)"/>
        <arg name="batt_charge" value="$(arg batt_charge)"/>

        <!-- Pipeline generator -->
        <arg name="pipe_posx" value="$(arg pipe_posx)"/> <!--30-->
        <arg name="pipe_posy" value="$(arg pipe_posy)"/> 
        <arg name="pipe_scale" value="$(arg pipe_scale)"/>
        <arg name="length_min" value="$(arg length_min)"/>
        <arg name="length_max" value="$(arg length_max)"/>
        <arg name="angle_min" value="$(arg angle_min)"/>
        <arg name="angle_max" value="$(arg angle_max)"/>
        <arg name="num_segments" value="$(arg num_segments)"/>

        <!-- Degradation Detector LEC enable -->
        <arg name="enable_fault_detection" value="$(arg enable_fault_detection)"/>
        
        <!-- Thruster motor failure for thrust loss and amper drop in thruster power -->
        <arg name="thruster_motor_failure" value="$(arg thruster_motor_failure)"/>
        <arg name="thruster_id" value="$(arg thruster_id)"/>  <!-- 0..5 -->
        <arg name="thruster_thrust_force_efficiency" value="$(arg thruster_thrust_force_efficiency)"/>
        <arg name="thruster_motor_fail_duration" value="$(arg thruster_motor_fail_duration)"/>
        <arg name="thruster_motor_fail_starting_time" value="$(arg thruster_motor_fail_starting_time)"/>
        <!-- Secondaty thruster failure -->
        <arg name="dual_thruster_failure" value="$(arg dual_thruster_failure)"/>
        <arg name="second_thruster_id" value="$(arg second_thruster_id)"/>  <!-- 0..5 -->
        <arg name="second_thruster_thrust_force_efficiency" value="$(arg second_thruster_thrust_force_efficiency)"/>
        <arg name="second_thruster_motor_fail_duration" value="$(arg second_thruster_motor_fail_duration)"/>
        <arg name="second_thruster_motor_fail_starting_time" value="$(arg second_thruster_motor_fail_starting_time)"/>
    
        <arg name="enable_fault_detection_tester" value="$(arg enable_fault_detection_tester)"/>

        <!-- RPM sensor failure -->
        <arg name="failed_rpm_sensor" value="$(arg failed_rpm_sensor)"/>
        <arg name="failed_rpm_sensor_enable" value="$(arg failed_rpm_sensor_enable)"/>
        <arg name="failed_rpm_sensor_start" value="$(arg failed_rpm_sensor_start)"/>
        
        <!--Argument for number of obstacles-->
        <!-- <arg name="num_obstacles" value="$(arg )"/>"100"/>
        <arg name="obs_distance" value="$(arg )"/> -->

        <!-- static and dynamic obstacles-->
        <arg name="enable_obstacles" value="$(arg enable_obstacles)"/>
        <arg name="enable_debris" value="$(arg enable_debris)"/>
        <arg name="enable_dynamic_obstacles" value="$(arg enable_dynamic_obstacles)"/>
        <arg name="lambda_low" value="$(arg lambda_low)"/>
        <arg name="lambda_high" value="$(arg lambda_high)"/>
        <arg name="lambda_low_static" value="$(arg lambda_low_static)"/>
        <arg name="lambda_high_static" value="$(arg lambda_high_static)"/>
        <arg name="avg_uuv_speed" value="$(arg avg_uuv_speed)"/>
        <arg name="box_distance_variance" value="$(arg box_distance_variance)"/>
        <arg name="box_distance_static" value="$(arg box_distance_static)"/>
        <arg name="box_distance_x" value="$(arg box_distance_x)"/>
        <arg name="box_distance_y" value="$(arg box_distance_y)"/>
        <arg name="box_velocity_x" value="$(arg box_velocity_x)"/>
        <arg name="box_velocity_y" value="$(arg box_velocity_y)"/>
        <arg name="box_max_cnt" value="$(arg box_max_cnt)"/>
        <arg name="box_size_x" value="$(arg box_size_x)"/>
        <arg name="box_size_y" value="$(arg box_size_y)"/>
        <arg name="box_size_z" value="$(arg box_size_z)"/>
        <arg name="enable_wall" value="$(arg enable_wall)"/>
        <arg name="enable_random" value="$(arg enable_random)"/>
        <arg name="obstacle_filename_static" value="$(arg obstacle_filename_static)"/>
        <arg name="obstacle_filename_dynamic" value="$(arg obstacle_filename_dynamic)"/>
        <arg name="random_box_density" value="$(arg random_box_density)"/>

        <!-- Less often modified params: -->    

        <!--Thruster blade failure for IMU noise-->
        <arg name="thruster_blade_failure" value="$(arg thruster_blade_failure)"/>

        <!-- BlueROV2 launch params-->
        <arg name="mode" value="$(arg mode)"/>

        <!-- Use NED -->
        <arg name="use_ned" value="$(arg use_ned)"/>

        <!-- Random Seed for ROS Nodes and Gazebo Plugins -->
        <arg name="random_seed" value="$(arg random_seed)"/>

        <!-- Gazebo World Parameters-->
        <arg name="ocean_depth" value="$(arg ocean_depth)"/>
        <arg name="paused" value="$(arg paused)"/>
        <!-- <arg name="headless" value="$(arg )"/> -->
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="timeout" value="$(arg timeout)"/>
        <arg name="gz_debug" value="$(arg gz_debug)"/>

        <!-- Vehicle's initial position -->
        <!-- appx 2km south of world origin-->
        <!--<arg name="vehicle_latitude" value="$(arg )"/>"38.95320298"/>
        <arg name="vehicle_longitude" value="$(arg )"/>"-76.398000"/>-->

        <arg name="vehicle_latitude" value="$(arg vehicle_latitude)"/>
        <arg name="vehicle_longitude" value="$(arg vehicle_longitude)"/>
        <arg name="vehicle_altitude" value="$(arg vehicle_altitude)"/>
        <!-- NED Orientation -->
        <arg name="vehicle_roll" value="$(arg vehicle_roll)"/>
        <arg name="vehicle_pitch" value="$(arg vehicle_pitch)"/>
        <arg name="vehicle_yaw" value="$(arg vehicle_yaw)"/>

        <!-- World Origin in lat long -->
        <arg name="origin_latitude" value="$(arg origin_latitude)"/> <!-- 38.971203 -->
        <arg name="origin_longitude" value="$(arg origin_longitude)"/> <!-- -76.398464 -->
        <arg name="origin_altitude" value="$(arg origin_altitude)"/>
    
        <arg name="upenn_sysid" value="$(arg upenn_sysid)"/>
        <arg name="rviz" value="$(arg rviz)"/>

        <!-- Pencilbeam FLS params -->
        <arg name="max_range" value="$(arg max_range)"/>
    </include>
    
    <include file="$(find vandy_bluerov)/launch/start_bluerov_uuv.launch">
        <arg name="uuv_name" value="$(arg uuv_name)"/>
        <arg name="unpause_timeout" value="$(arg unpause_timeout)"/>
        <arg name="timeout" value="$(arg timeout)"/>
        
        <!--rtreach parameters-->
        <arg name="use_rtreach" value="$(arg use_rtreach)"/>
        <arg name="box_sim_time" value="$(arg box_sim_time)"/>
        <arg name="uuv_sim_time" value= "$(arg uuv_sim_time)"/>
        <arg name="box_wall_time" value="$(arg box_wall_time)"/>
        <arg name="uuv_wall_time" value="$(arg uuv_wall_time)"/>
        <arg name="box_display_max" value="$(arg box_display_max)"/>
        <arg name="box_size_x" value="$(arg box_size_x)"/>
        <arg name="rtreach_output" value="$(arg rtreach_output)"/>
        <!--rtreach disturbance parameters-->
        <arg name="xd_l" value="$(arg xd_l)" />
        <arg name="xd_u" value="$(arg xd_u)" />
        <arg name="yd_l" value="$(arg yd_l)" />
        <arg name="yd_u" value="$(arg yd_u)" />
        <arg name="vd_l" value="$(arg vd_l)" />
        <arg name="vd_u" value="$(arg vd_u)" />
        <arg name="thd_l" value="$(arg thd_l)" />
        <arg name="thd_u" value="$(arg thd_u)" />
        <arg name="parameter_uncertainty" value="$(arg parameter_uncertainty)"/>
        <arg name="x_unc" value="$(arg x_unc)" />
        <arg name="y_unc" value="$(arg y_unc)" />
        <arg name="speed_unc" value="$(arg speed_unc)" />
        <arg name="theta_unc" value="$(arg theta_unc)" />
        

        <!-- Rosbag -->
        <arg name="record" value="$(arg record)"/> 
        <arg name="results_directory" value="$(arg results_directory)"/>
        <arg name="bag_filename" value="$(arg bag_filename)"/>
        <arg name="small_bagfile" value="$(arg small_bagfile)"/>

        <!-- Often modified params: -->

        <!-- No go zones -->
        <arg name="no_go_zone_list" value="$(arg no_go_zone_list)"/>

        <!-- Anomaly Detector for Fishing Nets -->
        <arg name="enable_anomaly_detector" value="$(arg enable_anomaly_detector)"/>

        <!-- Behaviour Tree CM -->
        <arg name="enable_emergency_stop" value="$(arg enable_emergency_stop)"/> 
        <arg name="thruster_motor_failure" value="$(arg thruster_motor_failure)"/> 


        <!-- FDR Log -->
        <arg name="fdr_log_filename" value="$(arg fdr_log_filename)"/>
        <arg name="generate_fdr" value="$(arg generate_fdr)"/>
        
        <!-- Runtime evaluation -->
        <arg name="bluerov_eval" value="$(arg bluerov_eval)"/>

        <!-- Obstacle avoidance -->
        <arg name="use_obstacle_avoidance" value="$(arg use_obstacle_avoidance)"/>

        <!-- FLS LEC3 OR BlueROV Ping Sonar -->
        <arg name="obstacle_avoidance_source" value="$(arg obstacle_avoidance_source)"/>


        <!-- Waypoints: -->
        <arg name="random_waypoints" value="$(arg random_waypoints)"/>
        <arg name="waypoint_filename" value="$(arg waypoint_filename)"/>
        <arg name="num_waypoints" value="$(arg num_waypoints)"/>
        <arg name="min_distance" value="$(arg min_distance)"/>
        <arg name="max_distance" value="$(arg max_distance)"/>
        <arg name="min_heading" value="$(arg min_heading)"/>
        <arg name="max_heading" value="$(arg max_heading)"/>
        <arg name="x_track_error" value="$(arg x_track_error)"/>

        <!-- AIS -->
        <!-- VU: -->
        <arg name="generate_ais_data" value="$(arg generate_ais_data)"/>
        <arg name="predict_ais_data"  value="$(arg predict_ais_data)"/>
        <arg name="dynamic_obstacles_count" value="$(arg dynamic_obstacles_count)"/>

        <!-- CM params -->
        <arg name="travel_cost" value="$(arg travel_cost)"/>
        <arg name="failsafe_battery_low_threshold" value="$(arg failsafe_battery_low_threshold)"/>
        <arg name="failsafe_rth_enable" value="$(arg failsafe_rth_enable)"/>
        <arg name="failsafe_signal_lost_threshold" value="$(arg failsafe_signal_lost_threshold)"/>
        <arg name="failsafe_tracking_lost_threshold" value="$(arg failsafe_tracking_lost_threshold)"/>
        <arg name="geofence_threshold" value="$(arg geofence_threshold)"/>
        <arg name="home_radius" value="$(arg home_radius)"/>
        <arg name="pipe_estimation_good_log_val" value="$(arg pipe_estimation_good_log_val)"/>
        <arg name="speed_good_log_val" value="$(arg speed_good_log_val)"/>
        <arg name="uuv_max_speed" value="$(arg uuv_max_speed)"/>
        <arg name="uuv_min_speed" value="$(arg uuv_min_speed)"/>
        <arg name="batt_charge" value="$(arg batt_charge)"/>
        <arg name="enable_rpm_sensor_check" value="$(arg enable_rpm_sensor_check)"/>
        <arg name="enable_training_data_collection" value="$(arg enable_training_data_collection)"/> 

        <!-- Degradation Detector LEC enable -->
        <arg name="enable_fault_detection" value="$(arg enable_fault_detection)"/>
        <arg name="decision_source" value="$(arg decision_source)"/>
        <arg name="fls_in_view_window" value="$(arg fls_in_view_window)"/>
        <arg name="fls_in_view_limit" value="$(arg fls_in_view_limit)"/>
        <arg name="classification_threshold" value="$(arg classification_threshold)"/>
        <arg name="sum_thrust_loss_threshold" value="$(arg sum_thrust_loss_threshold)"/>
        <arg name="total_degradation_threshold" value="$(arg total_degradation_threshold)"/>
        
        <arg name="mission_file" value="$(arg mission_file)"/>
        <arg name="fdir_path" value="$(arg fdir_path)"/>
        <arg name="fdir_params" value="$(arg fdir_params)"/>

        <!-- Note: Possible control reallocation with TAM -->
        <arg name="tam_file" value="$(arg tam_file)"/>

        <!-- BlueROV2 PID controller launch params-->
        <arg name="teleop" value="$(arg teleop)"/>
        <arg name="mode" value="$(arg mode)"/>
        <arg name="joy_id" value="$(arg joy_id)"/>
        <!-- Use NED -->
        <arg name="use_ned" value="$(arg use_ned)"/>

        <!-- Random Seed for ROS Nodes and Gazebo Plugins -->
        <arg name="random_seed" value="$(arg random_seed)"/>

        <!-- Init params from world model -->
        <arg name="vehicle_latitude" value="$(arg vehicle_latitude)"/>
        <arg name="vehicle_longitude" value="$(arg vehicle_longitude)"/>
        <arg name="vehicle_altitude" value="$(arg vehicle_altitude)"/>

        <arg name="vehicle_roll" value="$(arg vehicle_roll)"/>
        <arg name="vehicle_pitch" value="$(arg vehicle_pitch)"/>
        <arg name="vehicle_yaw" value="$(arg vehicle_yaw)"/>

        <!-- Vehicle's Initial HSD Command -->
        <arg name="init_heading" value="$(arg init_heading)"/>
        <arg name="init_speed" value="$(arg init_speed)"/>
        <arg name="init_depth" value="$(arg init_depth)"/>

        <!-- For testing PID Controller -->
        <arg name="heading" value="$(arg heading)"/>
        <arg name="speed" value="$(arg speed)"/>
        <arg name="depth" value="$(arg depth)"/>
        <arg name="enable_send_hsd_single" value="$(arg enable_send_hsd_single)"/>
        <arg name="hsd_debug_mode" value="$(arg hsd_debug_mode)"/>

        <!-- LEC3 params -->
        <arg name="max_range" value="$(arg max_range)"/>
        <arg name="num_range_bins" value="$(arg num_range_bins)"/>
        <arg name="lec3_vae_path" value="$(arg lec3_vae_path)"/>
        <arg name="lec3_filename" value="$(arg lec3_filename)"/>


        <!-- VU LEC2 params -->
        <arg name="lec2_vae_path" value="$(arg lec2_vae_path)"/>
	    <arg name="lec2_svdd_path" value="$(arg lec2_svdd_path)"/>
        <arg name="lec2_filename" value="$(arg lec2_filename)"/>
        <arg name="sss_sonar_noise" value="$(arg sss_sonar_noise)"/>
        <arg name="fis_sonar_noise" value="$(arg fis_sonar_noise)"/>    
    </include>
   
</launch>

