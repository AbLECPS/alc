/*
 * generated by Xtext 2.25.0
 */
package edu.vanderbilt.isis.alc.btree.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import edu.vanderbilt.isis.alc.btree.ide.contentassist.antlr.internal.InternalBTreeParser;
import edu.vanderbilt.isis.alc.btree.services.BTreeGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class BTreeParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(BTreeGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, BTreeGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
			builder.put(grammarAccess.getDefaultTypeAccess().getAlternatives(), "rule__DefaultType__Alternatives");
			builder.put(grammarAccess.getBehaviorNodeAccess().getAlternatives(), "rule__BehaviorNode__Alternatives");
			builder.put(grammarAccess.getSTD_BEHAVIOR_TYPEAccess().getAlternatives(), "rule__STD_BEHAVIOR_TYPE__Alternatives");
			builder.put(grammarAccess.getBTreeNodeAccess().getAlternatives(), "rule__BTreeNode__Alternatives");
			builder.put(grammarAccess.getStatusAccess().getAlternatives(), "rule__Status__Alternatives");
			builder.put(grammarAccess.getBASETYPEAccess().getAlternatives(), "rule__BASETYPE__Alternatives");
			builder.put(grammarAccess.getNUMBERAccess().getAlternatives(), "rule__NUMBER__Alternatives");
			builder.put(grammarAccess.getBehaviorModelAccess().getGroup(), "rule__BehaviorModel__Group__0");
			builder.put(grammarAccess.getSimpleTypeAccess().getGroup(), "rule__SimpleType__Group__0");
			builder.put(grammarAccess.getMessageTypeAccess().getGroup(), "rule__MessageType__Group__0");
			builder.put(grammarAccess.getFieldAccess().getGroup(), "rule__Field__Group__0");
			builder.put(grammarAccess.getFieldAccess().getGroup_1(), "rule__Field__Group_1__0");
			builder.put(grammarAccess.getTopicAccess().getGroup(), "rule__Topic__Group__0");
			builder.put(grammarAccess.getBBVarAccess().getGroup(), "rule__BBVar__Group__0");
			builder.put(grammarAccess.getBBVarAccess().getGroup_3(), "rule__BBVar__Group_3__0");
			builder.put(grammarAccess.getBBEventAccess().getGroup(), "rule__BBEvent__Group__0");
			builder.put(grammarAccess.getArgAccess().getGroup(), "rule__Arg__Group__0");
			builder.put(grammarAccess.getArgAccess().getGroup_2(), "rule__Arg__Group_2__0");
			builder.put(grammarAccess.getArgAccess().getGroup_4(), "rule__Arg__Group_4__0");
			builder.put(grammarAccess.getDefaultTypeAccess().getGroup_0(), "rule__DefaultType__Group_0__0");
			builder.put(grammarAccess.getBaseArrayTypeAccess().getGroup(), "rule__BaseArrayType__Group__0");
			builder.put(grammarAccess.getBaseArrayTypeAccess().getGroup_2(), "rule__BaseArrayType__Group_2__0");
			builder.put(grammarAccess.getBBNodeAccess().getGroup(), "rule__BBNode__Group__0");
			builder.put(grammarAccess.getBBNodeAccess().getGroup_7(), "rule__BBNode__Group_7__0");
			builder.put(grammarAccess.getCheckNodeAccess().getGroup(), "rule__CheckNode__Group__0");
			builder.put(grammarAccess.getStdBehaviorNodeAccess().getGroup(), "rule__StdBehaviorNode__Group__0");
			builder.put(grammarAccess.getTaskNodeAccess().getGroup(), "rule__TaskNode__Group__0");
			builder.put(grammarAccess.getTaskNodeAccess().getGroup_2(), "rule__TaskNode__Group_2__0");
			builder.put(grammarAccess.getTaskNodeAccess().getGroup_2_2(), "rule__TaskNode__Group_2_2__0");
			builder.put(grammarAccess.getTaskNodeAccess().getGroup_3(), "rule__TaskNode__Group_3__0");
			builder.put(grammarAccess.getTaskNodeAccess().getGroup_3_2(), "rule__TaskNode__Group_3_2__0");
			builder.put(grammarAccess.getTaskNodeAccess().getGroup_6(), "rule__TaskNode__Group_6__0");
			builder.put(grammarAccess.getTopicArgAccess().getGroup(), "rule__TopicArg__Group__0");
			builder.put(grammarAccess.getParBTNodeAccess().getGroup(), "rule__ParBTNode__Group__0");
			builder.put(grammarAccess.getParBTNodeAccess().getGroup_2(), "rule__ParBTNode__Group_2__0");
			builder.put(grammarAccess.getSeqBTNodeAccess().getGroup(), "rule__SeqBTNode__Group__0");
			builder.put(grammarAccess.getSeqBTNodeAccess().getGroup_2(), "rule__SeqBTNode__Group_2__0");
			builder.put(grammarAccess.getSelBTNodeAccess().getGroup(), "rule__SelBTNode__Group__0");
			builder.put(grammarAccess.getSelBTNodeAccess().getGroup_2(), "rule__SelBTNode__Group_2__0");
			builder.put(grammarAccess.getSIFBTNodeAccess().getGroup(), "rule__SIFBTNode__Group__0");
			builder.put(grammarAccess.getSIFBTNodeAccess().getGroup_5(), "rule__SIFBTNode__Group_5__0");
			builder.put(grammarAccess.getMonBTNodeAccess().getGroup(), "rule__MonBTNode__Group__0");
			builder.put(grammarAccess.getMonBTNodeAccess().getGroup_2(), "rule__MonBTNode__Group_2__0");
			builder.put(grammarAccess.getTaskBTNodeAccess().getGroup(), "rule__TaskBTNode__Group__0");
			builder.put(grammarAccess.getTaskBTNodeAccess().getGroup_2(), "rule__TaskBTNode__Group_2__0");
			builder.put(grammarAccess.getTimerBTNodeAccess().getGroup(), "rule__TimerBTNode__Group__0");
			builder.put(grammarAccess.getCheckBTNodeAccess().getGroup(), "rule__CheckBTNode__Group__0");
			builder.put(grammarAccess.getCheckBTNodeAccess().getGroup_2(), "rule__CheckBTNode__Group_2__0");
			builder.put(grammarAccess.getFLOATAccess().getGroup(), "rule__FLOAT__Group__0");
			builder.put(grammarAccess.getBehaviorModelAccess().getNameAssignment_1(), "rule__BehaviorModel__NameAssignment_1");
			builder.put(grammarAccess.getBehaviorModelAccess().getSimpleTypesAssignment_3(), "rule__BehaviorModel__SimpleTypesAssignment_3");
			builder.put(grammarAccess.getBehaviorModelAccess().getMessageTypesAssignment_4(), "rule__BehaviorModel__MessageTypesAssignment_4");
			builder.put(grammarAccess.getBehaviorModelAccess().getRosTopicsAssignment_5(), "rule__BehaviorModel__RosTopicsAssignment_5");
			builder.put(grammarAccess.getBehaviorModelAccess().getBbVariablesAssignment_6(), "rule__BehaviorModel__BbVariablesAssignment_6");
			builder.put(grammarAccess.getBehaviorModelAccess().getBbEventsAssignment_7(), "rule__BehaviorModel__BbEventsAssignment_7");
			builder.put(grammarAccess.getBehaviorModelAccess().getBbNodesAssignment_8(), "rule__BehaviorModel__BbNodesAssignment_8");
			builder.put(grammarAccess.getBehaviorModelAccess().getCheckNodesAssignment_9(), "rule__BehaviorModel__CheckNodesAssignment_9");
			builder.put(grammarAccess.getBehaviorModelAccess().getTaskNodesAssignment_10(), "rule__BehaviorModel__TaskNodesAssignment_10");
			builder.put(grammarAccess.getBehaviorModelAccess().getUpdatetimeAssignment_15(), "rule__BehaviorModel__UpdatetimeAssignment_15");
			builder.put(grammarAccess.getBehaviorModelAccess().getTimeoutAssignment_19(), "rule__BehaviorModel__TimeoutAssignment_19");
			builder.put(grammarAccess.getBehaviorModelAccess().getTreeAssignment_21(), "rule__BehaviorModel__TreeAssignment_21");
			builder.put(grammarAccess.getSimpleTypeAccess().getNameAssignment_1(), "rule__SimpleType__NameAssignment_1");
			builder.put(grammarAccess.getMessageTypeAccess().getNameAssignment_1(), "rule__MessageType__NameAssignment_1");
			builder.put(grammarAccess.getMessageTypeAccess().getPackageAssignment_2(), "rule__MessageType__PackageAssignment_2");
			builder.put(grammarAccess.getMessageTypeAccess().getFieldsAssignment_3(), "rule__MessageType__FieldsAssignment_3");
			builder.put(grammarAccess.getFieldAccess().getTypeAssignment_0(), "rule__Field__TypeAssignment_0");
			builder.put(grammarAccess.getFieldAccess().getArrayAssignment_1_0(), "rule__Field__ArrayAssignment_1_0");
			builder.put(grammarAccess.getFieldAccess().getCountAssignment_1_1(), "rule__Field__CountAssignment_1_1");
			builder.put(grammarAccess.getFieldAccess().getNameAssignment_2(), "rule__Field__NameAssignment_2");
			builder.put(grammarAccess.getTopicAccess().getTypeAssignment_1(), "rule__Topic__TypeAssignment_1");
			builder.put(grammarAccess.getTopicAccess().getNameAssignment_2(), "rule__Topic__NameAssignment_2");
			builder.put(grammarAccess.getTopicAccess().getTopic_stringAssignment_3(), "rule__Topic__Topic_stringAssignment_3");
			builder.put(grammarAccess.getBBVarAccess().getTypeAssignment_1(), "rule__BBVar__TypeAssignment_1");
			builder.put(grammarAccess.getBBVarAccess().getNameAssignment_2(), "rule__BBVar__NameAssignment_2");
			builder.put(grammarAccess.getBBVarAccess().getDefaultAssignment_3_1(), "rule__BBVar__DefaultAssignment_3_1");
			builder.put(grammarAccess.getBBEventAccess().getNameAssignment_1(), "rule__BBEvent__NameAssignment_1");
			builder.put(grammarAccess.getBBEventAccess().getTopicAssignment_2(), "rule__BBEvent__TopicAssignment_2");
			builder.put(grammarAccess.getArgAccess().getTypeAssignment_1(), "rule__Arg__TypeAssignment_1");
			builder.put(grammarAccess.getArgAccess().getArrayAssignment_2_0(), "rule__Arg__ArrayAssignment_2_0");
			builder.put(grammarAccess.getArgAccess().getCountAssignment_2_1(), "rule__Arg__CountAssignment_2_1");
			builder.put(grammarAccess.getArgAccess().getNameAssignment_3(), "rule__Arg__NameAssignment_3");
			builder.put(grammarAccess.getArgAccess().getDefaultAssignment_4_1(), "rule__Arg__DefaultAssignment_4_1");
			builder.put(grammarAccess.getBaseArrayTypeAccess().getValuesAssignment_1(), "rule__BaseArrayType__ValuesAssignment_1");
			builder.put(grammarAccess.getBaseArrayTypeAccess().getValuesAssignment_2_1(), "rule__BaseArrayType__ValuesAssignment_2_1");
			builder.put(grammarAccess.getBBNodeAccess().getNameAssignment_1(), "rule__BBNode__NameAssignment_1");
			builder.put(grammarAccess.getBBNodeAccess().getInput_topicAssignment_2(), "rule__BBNode__Input_topicAssignment_2");
			builder.put(grammarAccess.getBBNodeAccess().getTopic_bbvarAssignment_4(), "rule__BBNode__Topic_bbvarAssignment_4");
			builder.put(grammarAccess.getBBNodeAccess().getBb_varsAssignment_5(), "rule__BBNode__Bb_varsAssignment_5");
			builder.put(grammarAccess.getBBNodeAccess().getArgsAssignment_6(), "rule__BBNode__ArgsAssignment_6");
			builder.put(grammarAccess.getBBNodeAccess().getCommentAssignment_7_1(), "rule__BBNode__CommentAssignment_7_1");
			builder.put(grammarAccess.getCheckNodeAccess().getNameAssignment_2(), "rule__CheckNode__NameAssignment_2");
			builder.put(grammarAccess.getCheckNodeAccess().getBbvarAssignment_3(), "rule__CheckNode__BbvarAssignment_3");
			builder.put(grammarAccess.getCheckNodeAccess().getDefaultAssignment_5(), "rule__CheckNode__DefaultAssignment_5");
			builder.put(grammarAccess.getStdBehaviorNodeAccess().getTypeAssignment_0(), "rule__StdBehaviorNode__TypeAssignment_0");
			builder.put(grammarAccess.getStdBehaviorNodeAccess().getNameAssignment_1(), "rule__StdBehaviorNode__NameAssignment_1");
			builder.put(grammarAccess.getTaskNodeAccess().getNameAssignment_1(), "rule__TaskNode__NameAssignment_1");
			builder.put(grammarAccess.getTaskNodeAccess().getInput_topicsAssignment_2_1(), "rule__TaskNode__Input_topicsAssignment_2_1");
			builder.put(grammarAccess.getTaskNodeAccess().getInput_topicsAssignment_2_2_1(), "rule__TaskNode__Input_topicsAssignment_2_2_1");
			builder.put(grammarAccess.getTaskNodeAccess().getOutput_topicsAssignment_3_1(), "rule__TaskNode__Output_topicsAssignment_3_1");
			builder.put(grammarAccess.getTaskNodeAccess().getOutput_topicsAssignment_3_2_1(), "rule__TaskNode__Output_topicsAssignment_3_2_1");
			builder.put(grammarAccess.getTaskNodeAccess().getBb_varsAssignment_4(), "rule__TaskNode__Bb_varsAssignment_4");
			builder.put(grammarAccess.getTaskNodeAccess().getArgsAssignment_5(), "rule__TaskNode__ArgsAssignment_5");
			builder.put(grammarAccess.getTaskNodeAccess().getCommentAssignment_6_1(), "rule__TaskNode__CommentAssignment_6_1");
			builder.put(grammarAccess.getTopicArgAccess().getTypeAssignment_0(), "rule__TopicArg__TypeAssignment_0");
			builder.put(grammarAccess.getTopicArgAccess().getNameAssignment_1(), "rule__TopicArg__NameAssignment_1");
			builder.put(grammarAccess.getBTreeAccess().getBtreeAssignment(), "rule__BTree__BtreeAssignment");
			builder.put(grammarAccess.getParBTNodeAccess().getNameAssignment_1(), "rule__ParBTNode__NameAssignment_1");
			builder.put(grammarAccess.getParBTNodeAccess().getCondAssignment_2_1(), "rule__ParBTNode__CondAssignment_2_1");
			builder.put(grammarAccess.getParBTNodeAccess().getNodesAssignment_4(), "rule__ParBTNode__NodesAssignment_4");
			builder.put(grammarAccess.getSeqBTNodeAccess().getNameAssignment_1(), "rule__SeqBTNode__NameAssignment_1");
			builder.put(grammarAccess.getSeqBTNodeAccess().getCondAssignment_2_1(), "rule__SeqBTNode__CondAssignment_2_1");
			builder.put(grammarAccess.getSeqBTNodeAccess().getNodesAssignment_4(), "rule__SeqBTNode__NodesAssignment_4");
			builder.put(grammarAccess.getSelBTNodeAccess().getNameAssignment_1(), "rule__SelBTNode__NameAssignment_1");
			builder.put(grammarAccess.getSelBTNodeAccess().getCondAssignment_2_1(), "rule__SelBTNode__CondAssignment_2_1");
			builder.put(grammarAccess.getSelBTNodeAccess().getNodesAssignment_4(), "rule__SelBTNode__NodesAssignment_4");
			builder.put(grammarAccess.getSIFBTNodeAccess().getNameAssignment_1(), "rule__SIFBTNode__NameAssignment_1");
			builder.put(grammarAccess.getSIFBTNodeAccess().getChecksAssignment_4(), "rule__SIFBTNode__ChecksAssignment_4");
			builder.put(grammarAccess.getSIFBTNodeAccess().getChecksAssignment_5_1(), "rule__SIFBTNode__ChecksAssignment_5_1");
			builder.put(grammarAccess.getSIFBTNodeAccess().getNodesAssignment_8(), "rule__SIFBTNode__NodesAssignment_8");
			builder.put(grammarAccess.getSIFBTNodeAccess().getNodesAssignment_9(), "rule__SIFBTNode__NodesAssignment_9");
			builder.put(grammarAccess.getMonBTNodeAccess().getMonAssignment_1(), "rule__MonBTNode__MonAssignment_1");
			builder.put(grammarAccess.getMonBTNodeAccess().getMonAssignment_2_1(), "rule__MonBTNode__MonAssignment_2_1");
			builder.put(grammarAccess.getTaskBTNodeAccess().getTaskAssignment_1(), "rule__TaskBTNode__TaskAssignment_1");
			builder.put(grammarAccess.getTaskBTNodeAccess().getTaskAssignment_2_1(), "rule__TaskBTNode__TaskAssignment_2_1");
			builder.put(grammarAccess.getTimerBTNodeAccess().getNameAssignment_1(), "rule__TimerBTNode__NameAssignment_1");
			builder.put(grammarAccess.getTimerBTNodeAccess().getDurationAssignment_3(), "rule__TimerBTNode__DurationAssignment_3");
			builder.put(grammarAccess.getCheckBTNodeAccess().getCheckAssignment_1(), "rule__CheckBTNode__CheckAssignment_1");
			builder.put(grammarAccess.getCheckBTNodeAccess().getCheckAssignment_2_1(), "rule__CheckBTNode__CheckAssignment_2_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private BTreeGrammarAccess grammarAccess;

	@Override
	protected InternalBTreeParser createParser() {
		InternalBTreeParser result = new InternalBTreeParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public BTreeGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(BTreeGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
