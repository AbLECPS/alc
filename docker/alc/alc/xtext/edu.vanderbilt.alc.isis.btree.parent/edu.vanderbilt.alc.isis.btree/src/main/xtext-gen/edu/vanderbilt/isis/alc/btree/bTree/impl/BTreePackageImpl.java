/**
 * generated by Xtext 2.25.0
 */
package edu.vanderbilt.isis.alc.btree.bTree.impl;

import edu.vanderbilt.isis.alc.btree.bTree.Arg;
import edu.vanderbilt.isis.alc.btree.bTree.BBEvent;
import edu.vanderbilt.isis.alc.btree.bTree.BBNode;
import edu.vanderbilt.isis.alc.btree.bTree.BBVar;
import edu.vanderbilt.isis.alc.btree.bTree.BTree;
import edu.vanderbilt.isis.alc.btree.bTree.BTreeFactory;
import edu.vanderbilt.isis.alc.btree.bTree.BTreeNode;
import edu.vanderbilt.isis.alc.btree.bTree.BTreePackage;
import edu.vanderbilt.isis.alc.btree.bTree.BaseArrayType;
import edu.vanderbilt.isis.alc.btree.bTree.BehaviorModel;
import edu.vanderbilt.isis.alc.btree.bTree.BehaviorNode;
import edu.vanderbilt.isis.alc.btree.bTree.CheckBTNode;
import edu.vanderbilt.isis.alc.btree.bTree.CheckNode;
import edu.vanderbilt.isis.alc.btree.bTree.ChildNode;
import edu.vanderbilt.isis.alc.btree.bTree.DefaultType;
import edu.vanderbilt.isis.alc.btree.bTree.Field;
import edu.vanderbilt.isis.alc.btree.bTree.MessageType;
import edu.vanderbilt.isis.alc.btree.bTree.MonBTNode;
import edu.vanderbilt.isis.alc.btree.bTree.ParBTNode;
import edu.vanderbilt.isis.alc.btree.bTree.SIFBTNode;
import edu.vanderbilt.isis.alc.btree.bTree.SelBTNode;
import edu.vanderbilt.isis.alc.btree.bTree.SeqBTNode;
import edu.vanderbilt.isis.alc.btree.bTree.SimpleType;
import edu.vanderbilt.isis.alc.btree.bTree.StdBehaviorNode;
import edu.vanderbilt.isis.alc.btree.bTree.TaskBTNode;
import edu.vanderbilt.isis.alc.btree.bTree.TaskNode;
import edu.vanderbilt.isis.alc.btree.bTree.TimerBTNode;
import edu.vanderbilt.isis.alc.btree.bTree.Topic;
import edu.vanderbilt.isis.alc.btree.bTree.TopicArg;
import edu.vanderbilt.isis.alc.btree.bTree.Type;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class BTreePackageImpl extends EPackageImpl implements BTreePackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass behaviorModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass simpleTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass messageTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass topicEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bbVarEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bbEventEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass argEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass defaultTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass baseArrayTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bbNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass checkNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass behaviorNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stdBehaviorNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass taskNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass topicArgEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bTreeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bTreeNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass childNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parBTNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass seqBTNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selBTNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sifbtNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass monBTNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass taskBTNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass timerBTNodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass checkBTNodeEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see edu.vanderbilt.isis.alc.btree.bTree.BTreePackage#eNS_URI
   * @see #init()
   * @generated
   */
  private BTreePackageImpl()
  {
    super(eNS_URI, BTreeFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link BTreePackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static BTreePackage init()
  {
    if (isInited) return (BTreePackage)EPackage.Registry.INSTANCE.getEPackage(BTreePackage.eNS_URI);

    // Obtain or create and register package
    Object registeredBTreePackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    BTreePackageImpl theBTreePackage = registeredBTreePackage instanceof BTreePackageImpl ? (BTreePackageImpl)registeredBTreePackage : new BTreePackageImpl();

    isInited = true;

    // Create package meta-data objects
    theBTreePackage.createPackageContents();

    // Initialize created meta-data
    theBTreePackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theBTreePackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(BTreePackage.eNS_URI, theBTreePackage);
    return theBTreePackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBehaviorModel()
  {
    return behaviorModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBehaviorModel_Name()
  {
    return (EAttribute)behaviorModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehaviorModel_SimpleTypes()
  {
    return (EReference)behaviorModelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehaviorModel_MessageTypes()
  {
    return (EReference)behaviorModelEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehaviorModel_RosTopics()
  {
    return (EReference)behaviorModelEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehaviorModel_BbVariables()
  {
    return (EReference)behaviorModelEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehaviorModel_BbEvents()
  {
    return (EReference)behaviorModelEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehaviorModel_BbNodes()
  {
    return (EReference)behaviorModelEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehaviorModel_CheckNodes()
  {
    return (EReference)behaviorModelEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehaviorModel_TaskNodes()
  {
    return (EReference)behaviorModelEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBehaviorModel_Updatetime()
  {
    return (EAttribute)behaviorModelEClass.getEStructuralFeatures().get(9);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBehaviorModel_Timeout()
  {
    return (EAttribute)behaviorModelEClass.getEStructuralFeatures().get(10);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehaviorModel_Tree()
  {
    return (EReference)behaviorModelEClass.getEStructuralFeatures().get(11);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSimpleType()
  {
    return simpleTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMessageType()
  {
    return messageTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMessageType_Package()
  {
    return (EAttribute)messageTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMessageType_Fields()
  {
    return (EReference)messageTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getType()
  {
    return typeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getType_Name()
  {
    return (EAttribute)typeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getField()
  {
    return fieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getField_Type()
  {
    return (EReference)fieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getField_Array()
  {
    return (EAttribute)fieldEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getField_Count()
  {
    return (EAttribute)fieldEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getField_Name()
  {
    return (EAttribute)fieldEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTopic()
  {
    return topicEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTopic_Type()
  {
    return (EReference)topicEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTopic_Name()
  {
    return (EAttribute)topicEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTopic_Topic_string()
  {
    return (EAttribute)topicEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBBVar()
  {
    return bbVarEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBBVar_Type()
  {
    return (EReference)bbVarEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBBVar_Name()
  {
    return (EAttribute)bbVarEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBBVar_Default()
  {
    return (EAttribute)bbVarEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBBVar_Bbvar()
  {
    return (EReference)bbVarEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBBEvent()
  {
    return bbEventEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBBEvent_Name()
  {
    return (EAttribute)bbEventEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBBEvent_Topic()
  {
    return (EReference)bbEventEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArg()
  {
    return argEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArg_Type()
  {
    return (EReference)argEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getArg_Array()
  {
    return (EAttribute)argEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getArg_Count()
  {
    return (EAttribute)argEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getArg_Name()
  {
    return (EAttribute)argEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArg_Default()
  {
    return (EReference)argEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDefaultType()
  {
    return defaultTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBaseArrayType()
  {
    return baseArrayTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBaseArrayType_Values()
  {
    return (EAttribute)baseArrayTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBBNode()
  {
    return bbNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBBNode_Name()
  {
    return (EAttribute)bbNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBBNode_Input_topic()
  {
    return (EReference)bbNodeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBBNode_Topic_bbvar()
  {
    return (EReference)bbNodeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBBNode_Bb_vars()
  {
    return (EReference)bbNodeEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBBNode_Args()
  {
    return (EReference)bbNodeEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBBNode_Comment()
  {
    return (EAttribute)bbNodeEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCheckNode()
  {
    return checkNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBehaviorNode()
  {
    return behaviorNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBehaviorNode_Name()
  {
    return (EAttribute)behaviorNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStdBehaviorNode()
  {
    return stdBehaviorNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStdBehaviorNode_Type()
  {
    return (EAttribute)stdBehaviorNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTaskNode()
  {
    return taskNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTaskNode_Input_topics()
  {
    return (EReference)taskNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTaskNode_Output_topics()
  {
    return (EReference)taskNodeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTaskNode_Bb_vars()
  {
    return (EReference)taskNodeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTaskNode_Args()
  {
    return (EReference)taskNodeEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTaskNode_Comment()
  {
    return (EAttribute)taskNodeEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTopicArg()
  {
    return topicArgEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTopicArg_Type()
  {
    return (EReference)topicArgEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTopicArg_Name()
  {
    return (EAttribute)topicArgEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBTree()
  {
    return bTreeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBTree_Btree()
  {
    return (EReference)bTreeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBTreeNode()
  {
    return bTreeNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getChildNode()
  {
    return childNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParBTNode()
  {
    return parBTNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getParBTNode_Name()
  {
    return (EAttribute)parBTNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getParBTNode_Cond()
  {
    return (EAttribute)parBTNodeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getParBTNode_Nodes()
  {
    return (EReference)parBTNodeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSeqBTNode()
  {
    return seqBTNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSeqBTNode_Name()
  {
    return (EAttribute)seqBTNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSeqBTNode_Cond()
  {
    return (EAttribute)seqBTNodeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSeqBTNode_Nodes()
  {
    return (EReference)seqBTNodeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSelBTNode()
  {
    return selBTNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSelBTNode_Name()
  {
    return (EAttribute)selBTNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSelBTNode_Cond()
  {
    return (EAttribute)selBTNodeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSelBTNode_Nodes()
  {
    return (EReference)selBTNodeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSIFBTNode()
  {
    return sifbtNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSIFBTNode_Name()
  {
    return (EAttribute)sifbtNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSIFBTNode_Checks()
  {
    return (EReference)sifbtNodeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSIFBTNode_Nodes()
  {
    return (EReference)sifbtNodeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMonBTNode()
  {
    return monBTNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMonBTNode_Mon()
  {
    return (EReference)monBTNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTaskBTNode()
  {
    return taskBTNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTaskBTNode_Task()
  {
    return (EReference)taskBTNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTimerBTNode()
  {
    return timerBTNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTimerBTNode_Name()
  {
    return (EAttribute)timerBTNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTimerBTNode_Duration()
  {
    return (EAttribute)timerBTNodeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCheckBTNode()
  {
    return checkBTNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCheckBTNode_Check()
  {
    return (EReference)checkBTNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BTreeFactory getBTreeFactory()
  {
    return (BTreeFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    behaviorModelEClass = createEClass(BEHAVIOR_MODEL);
    createEAttribute(behaviorModelEClass, BEHAVIOR_MODEL__NAME);
    createEReference(behaviorModelEClass, BEHAVIOR_MODEL__SIMPLE_TYPES);
    createEReference(behaviorModelEClass, BEHAVIOR_MODEL__MESSAGE_TYPES);
    createEReference(behaviorModelEClass, BEHAVIOR_MODEL__ROS_TOPICS);
    createEReference(behaviorModelEClass, BEHAVIOR_MODEL__BB_VARIABLES);
    createEReference(behaviorModelEClass, BEHAVIOR_MODEL__BB_EVENTS);
    createEReference(behaviorModelEClass, BEHAVIOR_MODEL__BB_NODES);
    createEReference(behaviorModelEClass, BEHAVIOR_MODEL__CHECK_NODES);
    createEReference(behaviorModelEClass, BEHAVIOR_MODEL__TASK_NODES);
    createEAttribute(behaviorModelEClass, BEHAVIOR_MODEL__UPDATETIME);
    createEAttribute(behaviorModelEClass, BEHAVIOR_MODEL__TIMEOUT);
    createEReference(behaviorModelEClass, BEHAVIOR_MODEL__TREE);

    simpleTypeEClass = createEClass(SIMPLE_TYPE);

    messageTypeEClass = createEClass(MESSAGE_TYPE);
    createEAttribute(messageTypeEClass, MESSAGE_TYPE__PACKAGE);
    createEReference(messageTypeEClass, MESSAGE_TYPE__FIELDS);

    typeEClass = createEClass(TYPE);
    createEAttribute(typeEClass, TYPE__NAME);

    fieldEClass = createEClass(FIELD);
    createEReference(fieldEClass, FIELD__TYPE);
    createEAttribute(fieldEClass, FIELD__ARRAY);
    createEAttribute(fieldEClass, FIELD__COUNT);
    createEAttribute(fieldEClass, FIELD__NAME);

    topicEClass = createEClass(TOPIC);
    createEReference(topicEClass, TOPIC__TYPE);
    createEAttribute(topicEClass, TOPIC__NAME);
    createEAttribute(topicEClass, TOPIC__TOPIC_STRING);

    bbVarEClass = createEClass(BB_VAR);
    createEReference(bbVarEClass, BB_VAR__TYPE);
    createEAttribute(bbVarEClass, BB_VAR__NAME);
    createEAttribute(bbVarEClass, BB_VAR__DEFAULT);
    createEReference(bbVarEClass, BB_VAR__BBVAR);

    bbEventEClass = createEClass(BB_EVENT);
    createEAttribute(bbEventEClass, BB_EVENT__NAME);
    createEReference(bbEventEClass, BB_EVENT__TOPIC);

    argEClass = createEClass(ARG);
    createEReference(argEClass, ARG__TYPE);
    createEAttribute(argEClass, ARG__ARRAY);
    createEAttribute(argEClass, ARG__COUNT);
    createEAttribute(argEClass, ARG__NAME);
    createEReference(argEClass, ARG__DEFAULT);

    defaultTypeEClass = createEClass(DEFAULT_TYPE);

    baseArrayTypeEClass = createEClass(BASE_ARRAY_TYPE);
    createEAttribute(baseArrayTypeEClass, BASE_ARRAY_TYPE__VALUES);

    bbNodeEClass = createEClass(BB_NODE);
    createEAttribute(bbNodeEClass, BB_NODE__NAME);
    createEReference(bbNodeEClass, BB_NODE__INPUT_TOPIC);
    createEReference(bbNodeEClass, BB_NODE__TOPIC_BBVAR);
    createEReference(bbNodeEClass, BB_NODE__BB_VARS);
    createEReference(bbNodeEClass, BB_NODE__ARGS);
    createEAttribute(bbNodeEClass, BB_NODE__COMMENT);

    checkNodeEClass = createEClass(CHECK_NODE);

    behaviorNodeEClass = createEClass(BEHAVIOR_NODE);
    createEAttribute(behaviorNodeEClass, BEHAVIOR_NODE__NAME);

    stdBehaviorNodeEClass = createEClass(STD_BEHAVIOR_NODE);
    createEAttribute(stdBehaviorNodeEClass, STD_BEHAVIOR_NODE__TYPE);

    taskNodeEClass = createEClass(TASK_NODE);
    createEReference(taskNodeEClass, TASK_NODE__INPUT_TOPICS);
    createEReference(taskNodeEClass, TASK_NODE__OUTPUT_TOPICS);
    createEReference(taskNodeEClass, TASK_NODE__BB_VARS);
    createEReference(taskNodeEClass, TASK_NODE__ARGS);
    createEAttribute(taskNodeEClass, TASK_NODE__COMMENT);

    topicArgEClass = createEClass(TOPIC_ARG);
    createEReference(topicArgEClass, TOPIC_ARG__TYPE);
    createEAttribute(topicArgEClass, TOPIC_ARG__NAME);

    bTreeEClass = createEClass(BTREE);
    createEReference(bTreeEClass, BTREE__BTREE);

    bTreeNodeEClass = createEClass(BTREE_NODE);

    childNodeEClass = createEClass(CHILD_NODE);

    parBTNodeEClass = createEClass(PAR_BT_NODE);
    createEAttribute(parBTNodeEClass, PAR_BT_NODE__NAME);
    createEAttribute(parBTNodeEClass, PAR_BT_NODE__COND);
    createEReference(parBTNodeEClass, PAR_BT_NODE__NODES);

    seqBTNodeEClass = createEClass(SEQ_BT_NODE);
    createEAttribute(seqBTNodeEClass, SEQ_BT_NODE__NAME);
    createEAttribute(seqBTNodeEClass, SEQ_BT_NODE__COND);
    createEReference(seqBTNodeEClass, SEQ_BT_NODE__NODES);

    selBTNodeEClass = createEClass(SEL_BT_NODE);
    createEAttribute(selBTNodeEClass, SEL_BT_NODE__NAME);
    createEAttribute(selBTNodeEClass, SEL_BT_NODE__COND);
    createEReference(selBTNodeEClass, SEL_BT_NODE__NODES);

    sifbtNodeEClass = createEClass(SIFBT_NODE);
    createEAttribute(sifbtNodeEClass, SIFBT_NODE__NAME);
    createEReference(sifbtNodeEClass, SIFBT_NODE__CHECKS);
    createEReference(sifbtNodeEClass, SIFBT_NODE__NODES);

    monBTNodeEClass = createEClass(MON_BT_NODE);
    createEReference(monBTNodeEClass, MON_BT_NODE__MON);

    taskBTNodeEClass = createEClass(TASK_BT_NODE);
    createEReference(taskBTNodeEClass, TASK_BT_NODE__TASK);

    timerBTNodeEClass = createEClass(TIMER_BT_NODE);
    createEAttribute(timerBTNodeEClass, TIMER_BT_NODE__NAME);
    createEAttribute(timerBTNodeEClass, TIMER_BT_NODE__DURATION);

    checkBTNodeEClass = createEClass(CHECK_BT_NODE);
    createEReference(checkBTNodeEClass, CHECK_BT_NODE__CHECK);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    simpleTypeEClass.getESuperTypes().add(this.getType());
    messageTypeEClass.getESuperTypes().add(this.getType());
    bbVarEClass.getESuperTypes().add(this.getCheckNode());
    baseArrayTypeEClass.getESuperTypes().add(this.getDefaultType());
    stdBehaviorNodeEClass.getESuperTypes().add(this.getBehaviorNode());
    taskNodeEClass.getESuperTypes().add(this.getBehaviorNode());
    bTreeNodeEClass.getESuperTypes().add(this.getChildNode());
    parBTNodeEClass.getESuperTypes().add(this.getBTreeNode());
    seqBTNodeEClass.getESuperTypes().add(this.getBTreeNode());
    selBTNodeEClass.getESuperTypes().add(this.getBTreeNode());
    sifbtNodeEClass.getESuperTypes().add(this.getBTreeNode());
    monBTNodeEClass.getESuperTypes().add(this.getBTreeNode());
    taskBTNodeEClass.getESuperTypes().add(this.getBTreeNode());
    timerBTNodeEClass.getESuperTypes().add(this.getBTreeNode());
    checkBTNodeEClass.getESuperTypes().add(this.getBTreeNode());

    // Initialize classes and features; add operations and parameters
    initEClass(behaviorModelEClass, BehaviorModel.class, "BehaviorModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBehaviorModel_Name(), ecorePackage.getEString(), "name", null, 0, 1, BehaviorModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehaviorModel_SimpleTypes(), this.getSimpleType(), null, "simpleTypes", null, 0, -1, BehaviorModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehaviorModel_MessageTypes(), this.getMessageType(), null, "messageTypes", null, 0, -1, BehaviorModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehaviorModel_RosTopics(), this.getTopic(), null, "rosTopics", null, 0, -1, BehaviorModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehaviorModel_BbVariables(), this.getBBVar(), null, "bbVariables", null, 0, -1, BehaviorModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehaviorModel_BbEvents(), this.getBBEvent(), null, "bbEvents", null, 0, -1, BehaviorModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehaviorModel_BbNodes(), this.getBBNode(), null, "bbNodes", null, 0, -1, BehaviorModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehaviorModel_CheckNodes(), this.getCheckNode(), null, "checkNodes", null, 0, -1, BehaviorModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehaviorModel_TaskNodes(), this.getBehaviorNode(), null, "taskNodes", null, 0, -1, BehaviorModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBehaviorModel_Updatetime(), ecorePackage.getEFloat(), "updatetime", null, 0, 1, BehaviorModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBehaviorModel_Timeout(), ecorePackage.getEFloat(), "timeout", null, 0, 1, BehaviorModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehaviorModel_Tree(), this.getBTree(), null, "tree", null, 0, 1, BehaviorModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(simpleTypeEClass, SimpleType.class, "SimpleType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(messageTypeEClass, MessageType.class, "MessageType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMessageType_Package(), ecorePackage.getEString(), "package", null, 0, 1, MessageType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMessageType_Fields(), this.getField(), null, "fields", null, 0, -1, MessageType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeEClass, Type.class, "Type", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getType_Name(), ecorePackage.getEString(), "name", null, 0, 1, Type.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fieldEClass, Field.class, "Field", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getField_Type(), this.getType(), null, "type", null, 0, 1, Field.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getField_Array(), ecorePackage.getEString(), "array", null, 0, 1, Field.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getField_Count(), ecorePackage.getEInt(), "count", null, 0, 1, Field.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getField_Name(), ecorePackage.getEString(), "name", null, 0, 1, Field.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(topicEClass, Topic.class, "Topic", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTopic_Type(), this.getMessageType(), null, "type", null, 0, 1, Topic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTopic_Name(), ecorePackage.getEString(), "name", null, 0, 1, Topic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTopic_Topic_string(), ecorePackage.getEString(), "topic_string", null, 0, 1, Topic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bbVarEClass, BBVar.class, "BBVar", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBBVar_Type(), this.getType(), null, "type", null, 0, 1, BBVar.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBBVar_Name(), ecorePackage.getEString(), "name", null, 0, 1, BBVar.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBBVar_Default(), ecorePackage.getEString(), "default", null, 0, 1, BBVar.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBBVar_Bbvar(), this.getBBVar(), null, "bbvar", null, 0, 1, BBVar.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bbEventEClass, BBEvent.class, "BBEvent", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBBEvent_Name(), ecorePackage.getEString(), "name", null, 0, 1, BBEvent.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBBEvent_Topic(), this.getTopic(), null, "topic", null, 0, 1, BBEvent.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(argEClass, Arg.class, "Arg", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getArg_Type(), this.getType(), null, "type", null, 0, 1, Arg.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getArg_Array(), ecorePackage.getEString(), "array", null, 0, 1, Arg.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getArg_Count(), ecorePackage.getEInt(), "count", null, 0, 1, Arg.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getArg_Name(), ecorePackage.getEString(), "name", null, 0, 1, Arg.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArg_Default(), this.getDefaultType(), null, "default", null, 0, 1, Arg.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(defaultTypeEClass, DefaultType.class, "DefaultType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(baseArrayTypeEClass, BaseArrayType.class, "BaseArrayType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBaseArrayType_Values(), ecorePackage.getEString(), "values", null, 0, -1, BaseArrayType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bbNodeEClass, BBNode.class, "BBNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBBNode_Name(), ecorePackage.getEString(), "name", null, 0, 1, BBNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBBNode_Input_topic(), this.getTopic(), null, "input_topic", null, 0, 1, BBNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBBNode_Topic_bbvar(), this.getBBVar(), null, "topic_bbvar", null, 0, 1, BBNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBBNode_Bb_vars(), this.getBBVar(), null, "bb_vars", null, 0, -1, BBNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBBNode_Args(), this.getArg(), null, "args", null, 0, -1, BBNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBBNode_Comment(), ecorePackage.getEString(), "comment", null, 0, 1, BBNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(checkNodeEClass, CheckNode.class, "CheckNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(behaviorNodeEClass, BehaviorNode.class, "BehaviorNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBehaviorNode_Name(), ecorePackage.getEString(), "name", null, 0, 1, BehaviorNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(stdBehaviorNodeEClass, StdBehaviorNode.class, "StdBehaviorNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStdBehaviorNode_Type(), ecorePackage.getEString(), "type", null, 0, 1, StdBehaviorNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(taskNodeEClass, TaskNode.class, "TaskNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTaskNode_Input_topics(), this.getTopicArg(), null, "input_topics", null, 0, -1, TaskNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTaskNode_Output_topics(), this.getTopicArg(), null, "output_topics", null, 0, -1, TaskNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTaskNode_Bb_vars(), this.getBBVar(), null, "bb_vars", null, 0, -1, TaskNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTaskNode_Args(), this.getArg(), null, "args", null, 0, -1, TaskNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTaskNode_Comment(), ecorePackage.getEString(), "comment", null, 0, 1, TaskNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(topicArgEClass, TopicArg.class, "TopicArg", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTopicArg_Type(), this.getTopic(), null, "type", null, 0, 1, TopicArg.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTopicArg_Name(), ecorePackage.getEString(), "name", null, 0, 1, TopicArg.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bTreeEClass, BTree.class, "BTree", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBTree_Btree(), this.getBTreeNode(), null, "btree", null, 0, 1, BTree.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bTreeNodeEClass, BTreeNode.class, "BTreeNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(childNodeEClass, ChildNode.class, "ChildNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(parBTNodeEClass, ParBTNode.class, "ParBTNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getParBTNode_Name(), ecorePackage.getEString(), "name", null, 0, 1, ParBTNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getParBTNode_Cond(), ecorePackage.getEString(), "cond", null, 0, 1, ParBTNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getParBTNode_Nodes(), this.getChildNode(), null, "nodes", null, 0, -1, ParBTNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(seqBTNodeEClass, SeqBTNode.class, "SeqBTNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSeqBTNode_Name(), ecorePackage.getEString(), "name", null, 0, 1, SeqBTNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSeqBTNode_Cond(), ecorePackage.getEString(), "cond", null, 0, 1, SeqBTNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSeqBTNode_Nodes(), this.getChildNode(), null, "nodes", null, 0, -1, SeqBTNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(selBTNodeEClass, SelBTNode.class, "SelBTNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSelBTNode_Name(), ecorePackage.getEString(), "name", null, 0, 1, SelBTNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSelBTNode_Cond(), ecorePackage.getEString(), "cond", null, 0, 1, SelBTNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSelBTNode_Nodes(), this.getChildNode(), null, "nodes", null, 0, -1, SelBTNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sifbtNodeEClass, SIFBTNode.class, "SIFBTNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSIFBTNode_Name(), ecorePackage.getEString(), "name", null, 0, 1, SIFBTNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSIFBTNode_Checks(), this.getCheckNode(), null, "checks", null, 0, -1, SIFBTNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSIFBTNode_Nodes(), this.getChildNode(), null, "nodes", null, 0, -1, SIFBTNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(monBTNodeEClass, MonBTNode.class, "MonBTNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMonBTNode_Mon(), this.getBBNode(), null, "mon", null, 0, -1, MonBTNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(taskBTNodeEClass, TaskBTNode.class, "TaskBTNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTaskBTNode_Task(), this.getBehaviorNode(), null, "task", null, 0, -1, TaskBTNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(timerBTNodeEClass, TimerBTNode.class, "TimerBTNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTimerBTNode_Name(), ecorePackage.getEString(), "name", null, 0, 1, TimerBTNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTimerBTNode_Duration(), ecorePackage.getEString(), "duration", null, 0, 1, TimerBTNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(checkBTNodeEClass, CheckBTNode.class, "CheckBTNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCheckBTNode_Check(), this.getCheckNode(), null, "check", null, 0, -1, CheckBTNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //BTreePackageImpl
