#user nginx;

worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    map $http_upgrade $connection_upgrade {
            default upgrade;
            ''      close;
    }
    
    ##
    # Basic Settings
    ##

    #sendfile off;
    sendfile on;

    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    ##
    # Logging Settings
    ##

    ##
    # Logging Settings
    ##

    #log_format compression 'request == "$request"'
    #                       '----request_uri == $request_uri'
    #                       '----uri == $uri'
    #                       '----servernumber == $servernumber'
    #                       '----uriinfo == $uriinfo'
    #                       '----upstreamcs == $upstreamcs'
    #                       '----upstreamadd == $upstream_addr'
    #                       '----request == $request status == $status'
    #                       '----args == $args';

    #access_log /var/log/nginx/access.log compression;
    #error_log /var/log/nginx/error.log notice;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    


    ##
    # Gzip Settings
    ##

    gzip on;
    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # Virtual Host Configs
    ##

    # Docker container names are resolvable to IP within docker network environment
    upstream webgme {
        server alc:8888;
    }


    upstream jupyter {
        server jupyter:12888;
    }
    
    upstream languageserver {
        server alc:5000;
    }

    upstream jupyter_matlab {
        server jupyter_matlab:8888;
    }


    server {
        listen 80;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        ssl_certificate /ssl_certs/test.crt;
        ssl_certificate_key  /ssl_certs/test.key;

        # We need to increase this from 1MB to allow larger projects to be exported.
        client_max_body_size 150M;
        
        
        # Proxy /ws requests to languageserver
        location ~ ^/ws/([0-9a-zA-Z]*)$ {
            # Add Docker DNS server
            # resolver 127.0.0.11;
            set $language "$1";
            rewrite  ^/ws/([0-9a-zA-Z]*)$ /$language break;
            set $upstreamcs "http://languageserver/$uri";
            proxy_pass http://languageserver;
            proxy_http_version 1.1;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Accept-Encoding gzip;
            #proxy_pass http://languageserver;
            #proxy_http_version 1.1;
            #proxy_set_header Upgrade $http_upgrade;
            #proxy_set_header Connection "upgrade";
            #proxy_set_header Origin "";
            #proxy_set_header Host $host;
            #proxy_set_header  Referer  http://$host;
            #add_header 'Access-Control-Allow-Origin' "$http_origin";
        }
        

        # Proxy /ipython requests to jupyter
        location /ipython/ {
            # Add Docker DNS server
            # resolver 127.0.0.11;
            proxy_pass http://jupyter;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Origin "";
            proxy_set_header Host $host;
            proxy_set_header  Referer  http://$host;
            add_header 'Access-Control-Allow-Origin' "$http_origin";
        }

        # Proxy /matlab requests to jupyter_matlab
        location /matlab/ {
            # Add Docker DNS server
            # resolver 127.0.0.11;
            proxy_pass http://jupyter_matlab;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Origin "";
            proxy_set_header Host $host:$server_port;
            proxy_set_header  Referer  http://$host:$server_port;
            add_header 'Access-Control-Allow-Origin' "$http_origin";
        }

        location /plot/ {
            # Add Docker DNS server
            # resolver 127.0.0.11;
            proxy_pass http://$host:15001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Origin "";
            proxy_set_header Host $host:15001;
            proxy_set_header  Referer  http://$host:15001;
            add_header 'Access-Control-Allow-Origin' "$http_origin";
        }


        location ~ ^/cs/([0-9a-zA-Z]*)/(logout)(.*)$ {
            resolver 127.0.0.11;
            set $servernumber "$1";
            set $uriinfo "$2";
            rewrite    ^/(.*)$ /logout break;
            set $upstreamcs "http://codeserver$servernumber:8080/$uri";
            proxy_pass https://codeserver$servernumber:8080;
            proxy_http_version 1.1;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Accept-Encoding gzip;
            add_header Set-Cookie "key=$remote_addr;Path=/cs/$servernumber;";
            
        }

        
        location ~ ^/cs/([0-9a-zA-Z]*)/(.*)$ {
            resolver 127.0.0.11;
            set $servernumber "$1";
            set $uriinfo "$2";
            rewrite    ^/(.*)$ /$uriinfo break;
            set $upstreamcs "http://codeserver$servernumber:8080/$uri";
            proxy_pass https://codeserver$servernumber:8080;
            proxy_http_version 1.1;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Accept-Encoding gzip;
        }

        location ~ ^/vnc/([0-9a-zA-Z]*)/(.*)$ {
            resolver 127.0.0.11;
            set $servernumber "$1";
            set $uriinfo "$2";
            set $delimeter "&";
            set $args "$args${delimeter}password=vncpassword";
            rewrite    ^/(.*)$ /$uriinfo break;
            set $upstreamcs "http://codeserver$servernumber:6901/$uri";
            proxy_pass http://codeserver$servernumber:6901;
            proxy_http_version 1.1;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Accept-Encoding gzip;
        }

        # location ~ ^/vs/([0-9a-zA-Z]*)/(logout)(.*)$ {
        #     resolver 127.0.0.11;
        #     set $servernumber "$1";
        #     set $uriinfo "$2";
        #     rewrite    ^/(.*)$ /logout break;
        #     set $upstreamcs "http://codeserver$servernumber:8080/$uri";
        #     proxy_pass https://codeserver$servernumber:8080;
        #     proxy_http_version 1.1;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header Host $http_host;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection $connection_upgrade;
        #     proxy_set_header Accept-Encoding gzip;
        #     add_header Set-Cookie "key=$remote_addr;Path=/vs/$servernumber;";
        # }
            

        # location ~ ^/vs/([0-9a-zA-Z]*)/(.*)$ {
        #     resolver 127.0.0.11;
        #     set $servernumber "$1";
        #     set $uriinfo "$2";
        #     rewrite    ^/(.*)$ /$uriinfo break;
        #     set $upstreamcs "http://codeserver$servernumber:8080/$uri";
        #     proxy_pass https://codeserver$servernumber:8080;
        #     proxy_http_version 1.1;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header Host $http_host;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection $connection_upgrade;
        #     proxy_set_header Accept-Encoding gzip;
        # }

        # location ~ ^/snc/([0-9a-zA-Z]*)/(.*)$ {
        #     resolver 127.0.0.11;
        #     set $servernumber "$1";
        #     set $uriinfo "$2";
        #     set $delimeter "";

        #     if ($is_args) {
        #         set $delimeter "&";
        #     }
        #     set $upstreamcs "http://codeserver$servernumber:6901/$uri";
        #     proxy_pass http://codeserver$servernumber:6901;
        #     proxy_http_version 1.1;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header Host $http_host;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection $connection_upgrade;
        #     proxy_set_header Accept-Encoding gzip;
        # }

        # Host documentation webpage at /doc
        location /doc {
            root /;
            index index.html;
            expires 30d;
        }

        # Proxy all other requests to webgme
        location / {
                # Add Docker DNS server
                # resolver 127.0.0.11;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;

                proxy_pass http://webgme;
                proxy_redirect off;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
        }
    }
}
